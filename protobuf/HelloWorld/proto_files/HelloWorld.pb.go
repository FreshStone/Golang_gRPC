// Code generated by protoc-gen-go. DO NOT EDIT.
// source: HelloWorld.proto

package HelloWorld

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Person_Country int32

const (
	Person_INDIA    Person_Country = 0
	Person_PAKISTAN Person_Country = 1
	Person_USA      Person_Country = 2
)

var Person_Country_name = map[int32]string{
	0: "INDIA",
	1: "PAKISTAN",
	2: "USA",
}

var Person_Country_value = map[string]int32{
	"INDIA":    0,
	"PAKISTAN": 1,
	"USA":      2,
}

func (x Person_Country) String() string {
	return proto.EnumName(Person_Country_name, int32(x))
}

func (Person_Country) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3b79cbc66ad27cd3, []int{0, 0}
}

type Person struct {
	Id                   int32          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Nationality          Person_Country `protobuf:"varint,3,opt,name=nationality,proto3,enum=HelloWorld.Person_Country" json:"nationality,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Person) Reset()         { *m = Person{} }
func (m *Person) String() string { return proto.CompactTextString(m) }
func (*Person) ProtoMessage()    {}
func (*Person) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b79cbc66ad27cd3, []int{0}
}

func (m *Person) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Person.Unmarshal(m, b)
}
func (m *Person) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Person.Marshal(b, m, deterministic)
}
func (m *Person) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Person.Merge(m, src)
}
func (m *Person) XXX_Size() int {
	return xxx_messageInfo_Person.Size(m)
}
func (m *Person) XXX_DiscardUnknown() {
	xxx_messageInfo_Person.DiscardUnknown(m)
}

var xxx_messageInfo_Person proto.InternalMessageInfo

func (m *Person) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Person) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Person) GetNationality() Person_Country {
	if m != nil {
		return m.Nationality
	}
	return Person_INDIA
}

func init() {
	proto.RegisterEnum("HelloWorld.Person_Country", Person_Country_name, Person_Country_value)
	proto.RegisterType((*Person)(nil), "HelloWorld.Person")
}

func init() { proto.RegisterFile("HelloWorld.proto", fileDescriptor_3b79cbc66ad27cd3) }

var fileDescriptor_3b79cbc66ad27cd3 = []byte{
	// 174 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xf0, 0x48, 0xcd, 0xc9,
	0xc9, 0x0f, 0xcf, 0x2f, 0xca, 0x49, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x42, 0x88,
	0x28, 0x4d, 0x67, 0xe4, 0x62, 0x0b, 0x48, 0x2d, 0x2a, 0xce, 0xcf, 0x13, 0xe2, 0xe3, 0x62, 0xca,
	0x4c, 0x91, 0x60, 0x54, 0x60, 0xd4, 0x60, 0x0d, 0x62, 0xca, 0x4c, 0x11, 0x12, 0xe2, 0x62, 0xc9,
	0x4b, 0xcc, 0x4d, 0x95, 0x60, 0x52, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb3, 0x85, 0x6c, 0xb8, 0xb8,
	0xf3, 0x12, 0x4b, 0x32, 0xf3, 0xf3, 0x12, 0x73, 0x32, 0x4b, 0x2a, 0x25, 0x98, 0x15, 0x18, 0x35,
	0xf8, 0x8c, 0xa4, 0xf4, 0x90, 0xac, 0x80, 0x18, 0xa6, 0xe7, 0x9c, 0x5f, 0x9a, 0x57, 0x52, 0x54,
	0x19, 0x84, 0xac, 0x5c, 0x49, 0x9b, 0x8b, 0x1d, 0x2a, 0x2e, 0xc4, 0xc9, 0xc5, 0xea, 0xe9, 0xe7,
	0xe2, 0xe9, 0x28, 0xc0, 0x20, 0xc4, 0xc3, 0xc5, 0x11, 0xe0, 0xe8, 0xed, 0x19, 0x1c, 0xe2, 0xe8,
	0x27, 0xc0, 0x28, 0xc4, 0xce, 0xc5, 0x1c, 0x1a, 0xec, 0x28, 0xc0, 0x94, 0xc4, 0x06, 0x76, 0xac,
	0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x0c, 0x03, 0x80, 0xb1, 0xc0, 0x00, 0x00, 0x00,
}
